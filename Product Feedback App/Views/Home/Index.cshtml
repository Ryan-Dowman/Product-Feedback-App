@using Microsoft.AspNetCore.Identity
@using Product_Feedback_App.Models.Domain
@using Product_Feedback_App.Models.Identity
@using Product_Feedback_App.Models.View

@model HomeIndexViewModel
@inject UserManager<AppUser> userManager
@{
    ViewData["Title"] = "Home Page";
    AppUser? user = await userManager.GetUserAsync(User);
}

<div id="homeContainer">
    <div id="homeLHS">
        <div class="widget" id="titleWidget">
            <div id="titleTextContainer">
                <p>Frontend Mentor</p>
                <p>Feedback Board</p>
            </div>
        </div>
        <div class="widget" id="categoriesWidget">
            <div class="category categoryOn">All</div>
            <div class="category">UI</div>
            <div class="category">UX</div>
            <div class="category">Enhancement</div>
            <div class="category">Bug</div>
            <div class="category">Feature</div>
        </div>
        <div class="widget" id="roadmapWidget">
            <div class="widgetHeader">
                <p class="widgetHeaderText">Roadmap</p>
                <a>View</a>
            </div>
            <div id="roadmapTrackerContainer">
                <div class="roadmapTracker">
                    <div class="roadmapTrackerLHS"><span></span>Planned</div>
                    <p class="roadmapTrackerValue">2</p>
                </div>
                <div class="roadmapTracker">
                    <div class="roadmapTrackerLHS"><span></span>In-Progress</div>
                    <p class="roadmapTrackerValue">3</p>
                </div>
                <div class="roadmapTracker">
                    <div class="roadmapTrackerLHS"><span></span>Live</div>
                    <p class="roadmapTrackerValue">1</p>
                </div>
            </div>
        </div>
        <div class="widget" id="userWidget">
            <div class="widgetHeader">
                <p class="widgetHeaderText">Logged In As</p>
            </div>
            <div id="userLoggedInContainer">
                <img src="@user?.ProfilePictureUrl" class="pfp" alt="Profile Picture" />
                <p>@user?.UserName</p>
                <a class="invisible" style="margin-left: auto;" asp-controller="Account" asp-action="Logout"><button>Logout</button></a>
            </div>
        </div>
    </div>
    <div id="homeRHS">
        <div id="feedbackBanner">
            <img id="suggestionIcon" src="/images/icons/suggestion.svg" alt="Suggestion Icon"/>
            <p id="suggestionCount">6 Suggestions</p>
            <div class="filterSelect">
                <select id="sortBy">
                    <option value="Most Upvotes">Most Upvotes</option>
                    <option value="Least Upvotes">Least Upvotes</option>
                    <option value="Most Comments">Most Comments</option>
                    <option value="Least Comments">Least Comments</option>
                </select>
            </div>
            <a class="invisible" style="margin-left: auto;" asp-controller="Feedback" asp-action="Create"><button class="button purple">+ Add Feedback</button></a>
        </div>
        <div id="feedbackContainer">
            @if (Model != null && Model.FeedbackViewModels.Any())
            {
                foreach (FeedbackViewModel feedbackViewModel in Model.FeedbackViewModels)
                {
                    Feedback feedback = feedbackViewModel.Feedback;
                
                    <div class="feedback">
                        <div class="feedbackLHS">
                            @if (feedbackViewModel.UserHasUpvoted)
                            {
                                <div class="feedbackUpvotes upvoted" id="@feedback.Id">@feedback.Upvotes.Count</div>
                            }
                            else
                            {
                                <div class="feedbackUpvotes" id="@feedback.Id">@feedback.Upvotes.Count</div>
                            }
                            <div class="feedbackTextContainer">
                                <a class="invisible" asp-area="" asp-controller="Feedback" asp-action="View" asp-route-id="@feedback.Id"><p class="feedbackTitle">@feedback.Title</p></a>
                                <p class="feedbackDetails">@feedback.Details</p>
                            </div>
                            <div class="category">@feedback.Category.ToString()</div>
                        </div>
                        <div class="feedbackRHS">
                            <img src="/images/icons/comment.svg" class="comment" />
                            <p>@feedback.Comments.Count</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <div id="noFeedbackContainer"></div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        ApplyEventListenersToUpvoteButtons();

        function ApplyEventListenersToUpvoteButtons() {
            let upvoteButtons = Array.from(document.getElementsByClassName("feedbackUpvotes"));

            for (upvoteButton of upvoteButtons) {
                upvoteButton.addEventListener("click", (event) => {
                    console.log("click");
                    fetch("/api/upvotes/add", {
                        method: "Post",
                        headers: {
                            "Accept": "*/*",
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ feedbackId: upvoteButton.id, userId: "@userManager.GetUserId(User)" })
                    }).then(result => {
                        GenerateNewUpvoteTotal(event.target);
                    });
                });
            }
        }

        function GenerateNewUpvoteTotal(element) {
            fetch(`/api/upvotes/${element.id}/Upvotes`, {
                method: "Get",
                headers: {
                    "Accept": "*/*",
                    "Content-Type": "application/json"
                }
            }).then(reponse => reponse.json()).then(result => {
                document.getElementById(element.id).innerText = result;
                document.getElementById(element.id).classList.toggle("upvoted");
            })
        }
    </script>
}
